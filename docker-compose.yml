version: '3.8'

services:
  # Main application with MCP server
  strunz-knowledge:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: strunz-knowledge-mcp
    ports:
      - "8000:8000"
    environment:
      - LOG_LEVEL=INFO
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8000
      - VECTOR_DB_TYPE=faiss
      - FAISS_INDEX_PATH=/app/data/processed/faiss_index
      - EMBEDDING_MODEL=sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2
    volumes:
      # Persist data between container restarts
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Docling service for OCR processing
  docling:
    image: quarkiverse/quarkus-docling:latest
    container_name: strunz-docling
    ports:
      - "8080:8080"
    environment:
      - QUARKUS_HTTP_PORT=8080
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Development database for future enhancements
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: strunz-db
  #   environment:
  #     - POSTGRES_USER=strunz
  #     - POSTGRES_PASSWORD=strunz_secret
  #     - POSTGRES_DB=strunz_knowledge
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

volumes:
  # postgres_data:
  #   driver: local